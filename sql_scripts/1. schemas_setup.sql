-- Use an admin role
USE ROLE ACCOUNTADMIN;

-- Create the `transform` role
CREATE ROLE IF NOT EXISTS TRANSFORM;
GRANT ROLE TRANSFORM TO ROLE ACCOUNTADMIN;

-- Create the default warehouse if necessary
CREATE WAREHOUSE IF NOT EXISTS COMPUTE_WH;
GRANT OPERATE ON WAREHOUSE COMPUTE_WH TO ROLE TRANSFORM;

---- Create the `dbt` user and assign to role
-- update LOGIN_NAME and PASSWORD
CREATE USER IF NOT EXISTS dbt
  PASSWORD=''
  LOGIN_NAME=''
  MUST_CHANGE_PASSWORD=FALSE
  DEFAULT_WAREHOUSE='COMPUTE_WH'
  DEFAULT_ROLE=TRANSFORM
  DEFAULT_NAMESPACE='DEV_ECOMMERCE_DB.RAW'
  COMMENT='dbt user for data pipelines';
GRANT ROLE TRANSFORM to USER dbt;



-- Create databases for different environments
CREATE DATABASE IF NOT EXISTS DEV_ECOMMERCE_DB;
CREATE DATABASE IF NOT EXISTS STG_ECOMMERCE_DB;
CREATE DATABASE IF NOT EXISTS PRD_ECOMMERCE_DB;

-- Set up schemas in each environment
---- DEV
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.RAW;      -- source data
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.SRC;      -- cleaned raw data
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.STG;      -- standardized data
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.INT;      -- intermediate tables
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.DIM;      -- dimensions
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.FCT;      -- facts
CREATE SCHEMA IF NOT EXISTS DEV_ECOMMERCE_DB.MART;     -- business layer

---- STG
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.RAW;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.SRC;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.STG;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.INT;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.DIM;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.FCT;
CREATE SCHEMA IF NOT EXISTS STG_ECOMMERCE_DB.MART;

---- PRD
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.RAW;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.SRC;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.STG;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.INT;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.DIM;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.FCT;
CREATE SCHEMA IF NOT EXISTS PRD_ECOMMERCE_DB.MART;



-- Set up permissions to role `transform`
GRANT ALL ON WAREHOUSE COMPUTE_WH TO ROLE TRANSFORM; 

-- DEV_ECOMMERCE_DB
GRANT ALL ON DATABASE DEV_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON ALL SCHEMAS IN DATABASE DEV_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE DEV_ECOMMERCE_DB to ROLE TRANSFORM;
-- Grant for each schema in DEV
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA DEV_ECOMMERCE_DB.MART to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA DEV_ECOMMERCE_DB.MART to ROLE TRANSFORM;

-- STG_ECOMMERCE_DB
GRANT ALL ON DATABASE STG_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON ALL SCHEMAS IN DATABASE STG_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE STG_ECOMMERCE_DB to ROLE TRANSFORM;
-- Grant for each schema in STG
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA STG_ECOMMERCE_DB.MART to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA STG_ECOMMERCE_DB.MART to ROLE TRANSFORM;

-- PRD_ECOMMERCE_DB
GRANT ALL ON DATABASE PRD_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON ALL SCHEMAS IN DATABASE PRD_ECOMMERCE_DB to ROLE TRANSFORM;
GRANT ALL ON FUTURE SCHEMAS IN DATABASE PRD_ECOMMERCE_DB to ROLE TRANSFORM;
-- Grant for each schema in PRD
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.RAW to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.SRC to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.STG to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.INT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.DIM to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.FCT to ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA PRD_ECOMMERCE_DB.MART to ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA PRD_ECOMMERCE_DB.MART to ROLE TRANSFORM;
